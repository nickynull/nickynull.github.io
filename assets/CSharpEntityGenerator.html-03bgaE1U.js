import{_ as D,e as a,o as T,c as E,a as s,f as r,g as d,d as O}from"./app-ZdMlO6Ko.js";const R=s("h1",{id:"c-实体对象生成器",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#c-实体对象生成器","aria-hidden":"true"},"#"),O(" C#实体对象生成器")],-1),S={class:"line-block"},U={class:"line-block"},N=s("span",{class:"line-label"},"实体类名",-1),M={class:"line-block"},G=s("span",{class:"line-label"},"实体描述",-1),L={class:"line-block"},B=s("span",{class:"line-label"},"实体表名",-1),I={class:"line-block"},z={class:"line-block"},A={__name:"CSharpEntityGenerator.html",setup(Q){const v=a(""),m=a(""),w=a(""),h=a(""),y=a(""),f=a(""),g=a(""),b=a("");function V(e,t){return e&&e.length>t?e[t]:""}function x(){if(!h.value)return;let e=[],t=h.value.split(`
`),l=y.value.split(`
`),C=f.value.split(`
`);const c=v.value||"TempObject",$=m.value,o=w.value;e.push("/// <summary>"),e.push(`/// ${$}`),e.push("/// </summary>"),e.push(`[Label("${$}")]`),e.push("[RootEntity, Serializable]"),e.push(`public class ${c} : DataEntity`),e.push("{");for(let n=0;n<t.length;n++){const u=V(t,n),p=V(l,n),i=V(C,n)||"string";e.push(`	#region ${p} ${u}`),e.push("	/// <summary>"),e.push(`	/// ${p}`),e.push("	/// </summary>"),e.push(`	[Label("${p}")]`),e.push(`	public static readonly Property<${i}> ${u}Property = P<${c}>.Register(e => e.${u});`),e.push("	/// <summary>"),e.push(`	/// ${p}`),e.push("	/// </summary>"),e.push(`	public ${i} ${u}`),e.push("	{"),e.push(`		get { return this.GetProperty(${u}Property); }`),e.push(`		set { this.SetProperty(${u}Property, value); }`),e.push("	}"),e.push("	#endregion"),e.push("")}return e.splice(e.length-1,1),e.push("}"),e.push(""),e.push("/// <summary>"),e.push(`/// ${$} 实体配置`),e.push("/// </summary>"),e.push(`internal class ${c}Config : EntityConfig<${c}>`),e.push("{"),e.push("	/// <summary>"),e.push("	/// 元数据配置"),e.push("	/// </summary>"),e.push("	protected override void ConfigMeta()"),e.push("	{"),e.push(`		Meta.MapTable("${o}").MapAllProperties();`),e.push("	}"),e.push("}"),e.join(`
`)}function k(){if(!h.value)return;let e=[],t=h.value.split(`
`);y.value.split(`
`),f.value.split(`
`);const l=["	protected override void ConfigView() {}","	protected override void ConfigListView()","	protected override void ConfigDetailsView()","	protected override void ConfigQueryView()","	protected override void ConfigSelectionView() {}","	protected override void ConfigImportView() {}","	protected void ConfigCustomizedView()","	protected void ConfigReadonlyView()"],C=["默认视图","列表视图","表单视图","查询视图","选择视图","导入视图","客制化视图","只读视图"],c=v.value||"TempObject",$=m.value;e.push("/// <summary>"),e.push(`/// ${$} 视图`),e.push("/// </summary>"),e.push(`class ${c}ViewConfig : WebViewConfig<${c}>`),e.push("{");for(let o=0;o<l.length;o++){const n=l[o],u=C[o];if(e.push("	/// <summary>"),e.push(`	/// ${u}`),e.push("	/// </summary>"),e.push(n),n.indexOf("{}")==-1){e.push("	{"),o==6&&(e.push("		using (View.OrderProperties())"),e.push("		{"));for(let p=0;p<t.length;p++){const i=V(t,p);o==1?e.push(`		View.Property(p => p.${i}).Readonly(false).ShowInList();`):o==2?e.push(`		View.Property(p => p.${i}).Readonly(false).ShowInDetail();`):o==6?e.push(`			View.Property(p => p.${i}).Readonly(false);`):o==7?e.push(`		View.Property(p => p.${i}).Readonly();`):e.push(`		View.Property(p => p.${i});`)}o==6&&e.push("		}"),e.push("	}")}e.push("")}return e.splice(e.length-1,1),e.push("}"),e.join(`
`)}function _(){g.value=x(),b.value=k(),window.$alert("运行完毕")}function P(e,t){window.$copy(e,t)}function j(){v.value="",m.value="",w.value="",h.value="",y.value="",f.value="",g.value="",b.value="",window.$alert("清空完毕")}return(e,t)=>(T(),E("div",null,[R,s("div",S,[s("button",{onClick:_},"运行"),s("button",{onClick:t[0]||(t[0]=l=>P(g.value,"实体"))},"复制实体"),s("button",{onClick:t[1]||(t[1]=l=>P(b.value,"视图"))},"复制视图"),s("button",{onClick:j},"清空")]),s("div",U,[N,r(s("input",{class:"line-content","onUpdate:modelValue":t[2]||(t[2]=l=>v.value=l)},null,512),[[d,v.value]])]),s("div",M,[G,r(s("input",{class:"line-content","onUpdate:modelValue":t[3]||(t[3]=l=>m.value=l)},null,512),[[d,m.value]])]),s("div",L,[B,r(s("input",{class:"line-content","onUpdate:modelValue":t[4]||(t[4]=l=>w.value=l)},null,512),[[d,w.value]])]),s("div",I,[r(s("textarea",{"onUpdate:modelValue":t[5]||(t[5]=l=>h.value=l),class:"text line-huge",placeholder:"属性名，多个时换行"},null,512),[[d,h.value]]),r(s("textarea",{"onUpdate:modelValue":t[6]||(t[6]=l=>y.value=l),class:"text line-huge",placeholder:"属性描述，多个时换行"},null,512),[[d,y.value]]),r(s("textarea",{"onUpdate:modelValue":t[7]||(t[7]=l=>f.value=l),class:"text line-huge",placeholder:"属性类型，多个时换行，不输入时默认string"},null,512),[[d,f.value]])]),s("div",z,[r(s("textarea",{"onUpdate:modelValue":t[8]||(t[8]=l=>g.value=l),class:"text line-huge",placeholder:"实体",readonly:"",style:{height:"25vh"}},null,512),[[d,g.value]]),r(s("textarea",{"onUpdate:modelValue":t[9]||(t[9]=l=>b.value=l),class:"text line-huge",placeholder:"视图",readonly:"",style:{height:"25vh"}},null,512),[[d,b.value]])])]))}},q=D(A,[["__file","CSharpEntityGenerator.html.vue"]]);export{q as default};
