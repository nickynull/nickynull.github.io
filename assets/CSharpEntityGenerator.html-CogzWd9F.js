import{f as r,c as x,o as k,b as s,g as d,h,d as S}from"./app-D8qZw_Gl.js";const T={class:"jm-block"},N={class:"line-block"},U={class:"line-block"},G={class:"line-block"},M={class:"line-block"},L={class:"line-block"},z={class:"line-block"},B={__name:"CSharpEntityGenerator",setup(j){const m=r(""),n=r(""),w=r(""),v=r(""),y=r(""),f=r(""),g=r(""),b=r("");function V(e,t){return e&&e.length>t?e[t]:""}function D(){if(!v.value)return;let e=[],t=v.value.split(`
`),l=y.value.split(`
`),C=f.value.split(`
`);const c=m.value||"TempObject",$=n.value,o=w.value;e.push("/// <summary>"),e.push(`/// ${$}`),e.push("/// </summary>"),e.push(`[Label("${$}")]`),e.push("[RootEntity, Serializable]"),e.push(`public class ${c} : DataEntity`),e.push("{");for(let u=0;u<t.length;u++){const p=V(t,u).trim(),i=V(l,u).trim(),a=V(C,u).trim()||"string";e.push(`	#region ${i} ${p}`),e.push("	/// <summary>"),e.push(`	/// ${i}`),e.push("	/// </summary>"),e.push(`	[Label("${i}")]`),e.push(`	public static readonly Property<${a}> ${p}Property = P<${c}>.Register(e => e.${p});`),e.push("	/// <summary>"),e.push(`	/// ${i}`),e.push("	/// </summary>"),e.push(`	public ${a} ${p}`),e.push("	{"),e.push(`		get { return this.GetProperty(${p}Property); }`),e.push(`		set { this.SetProperty(${p}Property, value); }`),e.push("	}"),e.push("	#endregion"),e.push("")}return e.splice(e.length-1,1),e.push("}"),e.push(""),e.push("/// <summary>"),e.push(`/// ${$} 实体配置`),e.push("/// </summary>"),e.push(`internal class ${c}Config : EntityConfig<${c}>`),e.push("{"),e.push("	/// <summary>"),e.push("	/// 元数据配置"),e.push("	/// </summary>"),e.push("	protected override void ConfigMeta()"),e.push("	{"),e.push(`		Meta.MapTable("${o}").MapAllProperties();`),e.push("	}"),e.push("}"),e.join(`
`)}function E(){if(!v.value)return;let e=[],t=v.value.split(`
`);y.value.split(`
`),f.value.split(`
`);const l=["	protected override void ConfigView() {}","	protected override void ConfigListView()","	protected override void ConfigDetailsView()","	protected override void ConfigQueryView()","	protected override void ConfigSelectionView() {}","	protected override void ConfigImportView() {}","	protected void ConfigCustomizedView()","	protected void ConfigReadonlyView()"],C=["默认视图","列表视图","表单视图","查询视图","选择视图","导入视图","客制化视图","只读视图"],c=m.value||"TempObject",$=n.value;e.push("/// <summary>"),e.push(`/// ${$} 视图`),e.push("/// </summary>"),e.push(`class ${c}ViewConfig : WebViewConfig<${c}>`),e.push("{");for(let o=0;o<l.length;o++){const u=l[o],p=C[o];if(e.push("	/// <summary>"),e.push(`	/// ${p}`),e.push("	/// </summary>"),e.push(u),u.indexOf("{}")==-1){e.push("	{"),o==6&&(e.push("		using (View.OrderProperties())"),e.push("		{"));for(let i=0;i<t.length;i++){const a=V(t,i);o==1?e.push(`		View.Property(p => p.${a}).Readonly(false).ShowInList();`):o==2?e.push(`		View.Property(p => p.${a}).Readonly(false).ShowInDetail();`):o==6?e.push(`			View.Property(p => p.${a}).Readonly(false);`):o==7?e.push(`		View.Property(p => p.${a}).Readonly();`):e.push(`		View.Property(p => p.${a});`)}o==6&&e.push("		}"),e.push("	}")}e.push("")}return e.splice(e.length-1,1),e.push("}"),e.join(`
`)}function O(){g.value=D(),b.value=E(),window.$alert("运行完毕")}function P(e,t){window.$copy(e,t)}function R(){m.value="",n.value="",w.value="",v.value="",y.value="",f.value="",g.value="",b.value="",window.$alert("清空完毕")}return(e,t)=>(k(),x("div",T,[s("div",N,[s("button",{onClick:O},"运行"),s("button",{onClick:t[0]||(t[0]=l=>P(g.value,"实体"))},"复制实体"),s("button",{onClick:t[1]||(t[1]=l=>P(b.value,"视图"))},"复制视图"),s("button",{onClick:R},"清空")]),s("div",U,[t[10]||(t[10]=s("span",{class:"line-label"},"实体类名",-1)),d(s("input",{class:"line-content","onUpdate:modelValue":t[2]||(t[2]=l=>m.value=l)},null,512),[[h,m.value]])]),s("div",G,[t[11]||(t[11]=s("span",{class:"line-label"},"实体描述",-1)),d(s("input",{class:"line-content","onUpdate:modelValue":t[3]||(t[3]=l=>n.value=l)},null,512),[[h,n.value]])]),s("div",M,[t[12]||(t[12]=s("span",{class:"line-label"},"实体表名",-1)),d(s("input",{class:"line-content","onUpdate:modelValue":t[4]||(t[4]=l=>w.value=l)},null,512),[[h,w.value]])]),s("div",L,[d(s("textarea",{"onUpdate:modelValue":t[5]||(t[5]=l=>v.value=l),class:"text line-huge",placeholder:"属性名，多个时换行"},null,512),[[h,v.value]]),d(s("textarea",{"onUpdate:modelValue":t[6]||(t[6]=l=>y.value=l),class:"text line-huge",placeholder:"属性描述，多个时换行"},null,512),[[h,y.value]]),d(s("textarea",{"onUpdate:modelValue":t[7]||(t[7]=l=>f.value=l),class:"text line-huge",placeholder:"属性类型，多个时换行，不输入时默认string"},null,512),[[h,f.value]])]),s("div",z,[d(s("textarea",{"onUpdate:modelValue":t[8]||(t[8]=l=>g.value=l),class:"text line-huge",placeholder:"实体",readonly:"",style:{height:"25vh"}},null,512),[[h,g.value]]),d(s("textarea",{"onUpdate:modelValue":t[9]||(t[9]=l=>b.value=l),class:"text line-huge",placeholder:"视图",readonly:"",style:{height:"25vh"}},null,512),[[h,b.value]])])]))}},A={__name:"CSharpEntityGenerator.html",setup(j){return(m,n)=>(k(),x("div",null,[n[0]||(n[0]=s("h1",{id:"c-实体对象生成器",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#c-实体对象生成器"},[s("span",null,"C#实体对象生成器")])],-1)),S(B)]))}},_=JSON.parse('{"path":"/tools/CSharpEntityGenerator.html","title":"C#实体对象生成器","lang":"zh-CN","frontmatter":{},"git":{},"readingTime":{"minutes":0.06,"words":17},"filePathRelative":"tools/CSharpEntityGenerator.md"}');export{A as comp,_ as data};
