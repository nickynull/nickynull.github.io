import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as l,o as p}from"./app-Bb_TA5OI.js";const o={};function e(r,s){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript"><span>JavaScript</span></a></h1><h2 id="javascript数学工具" tabindex="-1"><a class="header-anchor" href="#javascript数学工具"><span>JavaScript数学工具</span></a></h2><details class="hint-container details"><summary>JavaScript数学工具模块</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">export</span><span style="color:#66D9EF;font-style:italic;"> function</span><span style="color:#A6E22E;"> getMaxPrecision</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">arr</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">    // 计算最大精度</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    let</span><span style="color:#F8F8F2;"> maxPrecision </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    arr.</span><span style="color:#A6E22E;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">p</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        let</span><span style="color:#F8F8F2;"> pArr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> p.</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">split</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> (pArr.length </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">            let</span><span style="color:#F8F8F2;"> precision </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> pArr[pArr.length </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">].length;</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> (precision </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> maxPrecision) maxPrecision </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> precision;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> maxPrecision;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">/**</span></span>
<span class="line"><span style="color:#88846F;"> * 相加</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@param</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">{Array}</span><span style="color:#F8F8F2;"> arr</span><span style="color:#88846F;"> 数值数组</span></span>
<span class="line"><span style="color:#88846F;"> */</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#66D9EF;font-style:italic;"> function</span><span style="color:#A6E22E;"> sum</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">arr</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">!</span><span style="color:#F8F8F2;">arr) </span><span style="color:#F92672;">return</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> arr.</span><span style="color:#A6E22E;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">p</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#A6E22E;"> Number</span><span style="color:#F8F8F2;">(p) </span><span style="color:#F92672;">||</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#88846F;">    // 计算最大精度</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    let</span><span style="color:#F8F8F2;"> maxPrecision </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> getMaxPrecision</span><span style="color:#F8F8F2;">(arr);</span></span>
<span class="line"><span style="color:#88846F;">    // 整数求和</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    let</span><span style="color:#F8F8F2;"> pow </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">, maxPrecision);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    let</span><span style="color:#F8F8F2;"> sum </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F8F8F2;">    arr.</span><span style="color:#A6E22E;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">p</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> sum </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">round</span><span style="color:#F8F8F2;">(p </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> pow));</span></span>
<span class="line"><span style="color:#F8F8F2;">    sum </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> sum </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> pow;</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> sum;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">/**</span></span>
<span class="line"><span style="color:#88846F;"> * 相减</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@param</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">{Number}</span><span style="color:#F8F8F2;"> minuend</span><span style="color:#88846F;"> 被减数</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@param</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">{Any}</span><span style="color:#F8F8F2;"> subtractor</span><span style="color:#88846F;"> 减数</span></span>
<span class="line"><span style="color:#88846F;"> */</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#66D9EF;font-style:italic;"> function</span><span style="color:#A6E22E;"> minus</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">minuend</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">subtractors</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">!</span><span style="color:#F8F8F2;">subtractors) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> minuend;</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">!</span><span style="color:#F8F8F2;">Array.</span><span style="color:#A6E22E;">isArray</span><span style="color:#F8F8F2;">(subtractors)) subtractors </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [subtractors];</span></span>
<span class="line"><span style="color:#F8F8F2;">    subtractors </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> subtractors.</span><span style="color:#A6E22E;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">p</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F92672;"> -</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">Number</span><span style="color:#F8F8F2;">(p) </span><span style="color:#F92672;">||</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">    subtractors.</span><span style="color:#A6E22E;">push</span><span style="color:#F8F8F2;">(minuend);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    var</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> sum</span><span style="color:#F8F8F2;">(subtractors);</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> result;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">/**</span></span>
<span class="line"><span style="color:#88846F;"> * 相乘</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@param</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">{Array}</span><span style="color:#F8F8F2;"> arr</span><span style="color:#88846F;"> 数值数组</span></span>
<span class="line"><span style="color:#88846F;"> */</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#66D9EF;font-style:italic;"> function</span><span style="color:#A6E22E;"> multi</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">arr</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">!</span><span style="color:#F8F8F2;">arr </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> arr.length </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">return</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> arr.</span><span style="color:#A6E22E;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">p</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#A6E22E;"> Number</span><span style="color:#F8F8F2;">(p) </span><span style="color:#F92672;">||</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (arr.length </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> arr[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    // 整数相乘</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    let</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> arr[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> arr.length; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        let</span><span style="color:#F8F8F2;"> x1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> arr[i];</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        let</span><span style="color:#F8F8F2;"> pow1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">, </span><span style="color:#A6E22E;">getMaxPrecision</span><span style="color:#F8F8F2;">([result]));</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        let</span><span style="color:#F8F8F2;"> pow2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">, </span><span style="color:#A6E22E;">getMaxPrecision</span><span style="color:#F8F8F2;">([x1]));</span></span>
<span class="line"><span style="color:#F8F8F2;">        result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">round</span><span style="color:#F8F8F2;">(result </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> pow1) </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">round</span><span style="color:#F8F8F2;">(x1 </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> pow2) </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> (pow1 </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> pow2);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> result;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F92672;"> default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    sum,</span></span>
<span class="line"><span style="color:#F8F8F2;">    minus,</span></span>
<span class="line"><span style="color:#F8F8F2;">    multi</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,3)]))}const c=n(o,[["render",e]]),i=JSON.parse('{"path":"/webs/javascript.html","title":"JavaScript","lang":"zh-CN","frontmatter":{},"git":{},"readingTime":{"minutes":0.06,"words":17},"filePathRelative":"webs/javascript.md"}');export{c as comp,i as data};
