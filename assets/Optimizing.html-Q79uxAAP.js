import{_ as n,o as s,c as a,j as t}from"./app-ziSxbZKl.js";const e={},p=t(`<h1 id="优化技巧" tabindex="-1"><a class="header-anchor" href="#优化技巧" aria-hidden="true">#</a> 优化技巧</h1><h2 id="查看top-sql" tabindex="-1"><a class="header-anchor" href="#查看top-sql" aria-hidden="true">#</a> 查看TOP SQL</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">WITH</span> w1 <span class="token keyword">AS</span>
 <span class="token punctuation">(</span><span class="token keyword">SELECT</span> sst<span class="token punctuation">.</span>snap_id<span class="token punctuation">,</span>
         to_char<span class="token punctuation">(</span>sst<span class="token punctuation">.</span>begin_interval_time<span class="token punctuation">,</span> <span class="token string">&#39;yyyy-mm-dd hh24:mi:ss&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> begin_date<span class="token punctuation">,</span>
         to_char<span class="token punctuation">(</span>sst<span class="token punctuation">.</span>end_interval_time<span class="token punctuation">,</span> <span class="token string">&#39;yyyy-mm-dd hh24:mi:ss&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> end_date<span class="token punctuation">,</span>
         s<span class="token punctuation">.</span>executions_delta <span class="token keyword">AS</span> executions<span class="token punctuation">,</span>         
         <span class="token function">round</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>rows_processed_delta <span class="token operator">/</span>
               decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>executions_delta<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>executions_delta<span class="token punctuation">)</span><span class="token punctuation">,</span>
               <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> rows_per<span class="token punctuation">,</span>
         <span class="token function">round</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>elapsed_time_delta <span class="token operator">/</span> <span class="token number">1000000</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> elapsed_time<span class="token punctuation">,</span>
         <span class="token function">round</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>elapsed_time_delta <span class="token operator">/</span> <span class="token number">1000000</span> <span class="token operator">/</span>
               decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>executions_delta<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>executions_delta<span class="token punctuation">)</span><span class="token punctuation">,</span>
               <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> elapsed_time_per<span class="token punctuation">,</span>
         <span class="token function">round</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>cpu_time_delta <span class="token operator">/</span>
               decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>elapsed_time_delta<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>elapsed_time_delta<span class="token punctuation">)</span><span class="token punctuation">,</span>
               <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&quot;CPU%&quot;</span><span class="token punctuation">,</span>
         <span class="token function">round</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>iowait_delta <span class="token operator">/</span>
               decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>elapsed_time_delta<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>elapsed_time_delta<span class="token punctuation">)</span><span class="token punctuation">,</span>
               <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&quot;IO%&quot;</span><span class="token punctuation">,</span>
         s<span class="token punctuation">.</span>sql_id<span class="token punctuation">,</span>
         <span class="token function">round</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>cpu_time_delta <span class="token operator">/</span> <span class="token number">1000000</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> cpu_time<span class="token punctuation">,</span>
         <span class="token function">round</span><span class="token punctuation">(</span><span class="token function">round</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>cpu_time_delta <span class="token operator">/</span> <span class="token number">1000000</span><span class="token punctuation">)</span> <span class="token operator">/</span>
               decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>executions_delta<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>executions_delta<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> cpu_time_per<span class="token punctuation">,</span>
         <span class="token function">round</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>iowait_delta <span class="token operator">/</span> <span class="token number">1000000</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> user_io_wait_time<span class="token punctuation">,</span>
         <span class="token function">round</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>iowait_delta <span class="token operator">/</span> <span class="token number">1000000</span> <span class="token operator">/</span>
               decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>executions_delta<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>executions_delta<span class="token punctuation">)</span><span class="token punctuation">,</span>
               <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> user_io_wait_time_per<span class="token punctuation">,</span>
         s<span class="token punctuation">.</span>buffer_gets_delta <span class="token keyword">AS</span> buffer_gets<span class="token punctuation">,</span>
         <span class="token function">round</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>buffer_gets_delta <span class="token operator">/</span>
               decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>executions_delta<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>executions_delta<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> buffer_gets_per<span class="token punctuation">,</span>
         s<span class="token punctuation">.</span>disk_reads_delta <span class="token keyword">AS</span> disk_reads<span class="token punctuation">,</span>
         <span class="token function">round</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>disk_reads_delta <span class="token operator">/</span>
               decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>executions_delta<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>executions_delta<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> disk_reads_per<span class="token punctuation">,</span>
         s<span class="token punctuation">.</span>parse_calls_delta <span class="token keyword">AS</span> parse_calls<span class="token punctuation">,</span>
         <span class="token function">round</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>parse_calls_delta <span class="token operator">/</span>
               decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>executions_delta<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>executions_delta<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> parse_calls_per<span class="token punctuation">,</span>
         s<span class="token punctuation">.</span>sharable_mem<span class="token punctuation">,</span>
         <span class="token function">round</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>sharable_mem <span class="token operator">/</span>
               decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>executions_delta<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>executions_delta<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> sharable_mem_per
    <span class="token keyword">FROM</span> sys<span class="token punctuation">.</span>dba_hist_snapshot sst<span class="token punctuation">,</span> dba_hist_sqlstat s
   <span class="token keyword">WHERE</span> sst<span class="token punctuation">.</span>dbid <span class="token operator">=</span> s<span class="token punctuation">.</span>dbid
     <span class="token operator">AND</span> sst<span class="token punctuation">.</span>snap_id <span class="token operator">=</span> s<span class="token punctuation">.</span>snap_id
     <span class="token operator">AND</span> sst<span class="token punctuation">.</span>instance_number <span class="token operator">=</span> s<span class="token punctuation">.</span>instance_number
     <span class="token operator">AND</span> sst<span class="token punctuation">.</span>begin_interval_time <span class="token operator">&gt;</span>
         to_date<span class="token punctuation">(</span><span class="token string">&#39;2023-04-13 14:00:00&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;yyyy-mm-dd hh24:mi:ss&#39;</span><span class="token punctuation">)</span>
     <span class="token operator">AND</span> sst<span class="token punctuation">.</span>end_interval_time <span class="token operator">&lt;</span>
         to_date<span class="token punctuation">(</span><span class="token string">&#39;2023-04-13 16:00:00&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;yyyy-mm-dd hh24:mi:ss&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">24</span> <span class="token operator">/</span> <span class="token number">60</span>
   <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> nvl<span class="token punctuation">(</span>s<span class="token punctuation">.</span>elapsed_time_delta<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">DESC</span><span class="token punctuation">)</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> w1 <span class="token keyword">WHERE</span> rownum <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="计算表的行数" tabindex="-1"><a class="header-anchor" href="#计算表的行数" aria-hidden="true">#</a> 计算表的行数</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">---------------------------------------------------------------------------------------------------------------</span>
<span class="token comment">--全表扫描，从磁盘读取（直接路径读）</span>
<span class="token keyword">SELECT</span> odbs_performance_snap_util<span class="token punctuation">.</span>start_snap_sql_simple<span class="token punctuation">(</span>i_task_name <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;test230517m1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>

<span class="token comment">--alter session set &quot;_serial_direct_read&quot;=never; </span>

<span class="token keyword">alter</span> <span class="token keyword">session</span> <span class="token keyword">set</span> <span class="token string">&quot;_serial_direct_read&quot;</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span> 

<span class="token keyword">SELECT</span> <span class="token comment">/*test230517m1*/</span> <span class="token comment">/*+ full(t) */</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> big_table_line2 t<span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> odbs_performance_snap_util<span class="token punctuation">.</span>end_snap_sql_simple <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>

<span class="token comment">---------------------------------------------------------------------------------------------------------------</span>
<span class="token comment">--全表扫描，从内存读取</span>
<span class="token keyword">SELECT</span> odbs_performance_snap_util<span class="token punctuation">.</span>start_snap_sql_simple<span class="token punctuation">(</span>i_task_name <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;test230517n1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>

<span class="token keyword">alter</span> <span class="token keyword">session</span> <span class="token keyword">set</span> <span class="token string">&quot;_serial_direct_read&quot;</span><span class="token operator">=</span>never<span class="token punctuation">;</span> 

<span class="token comment">--alter session set &quot;_serial_direct_read&quot;=true; </span>

<span class="token keyword">SELECT</span> <span class="token comment">/*test230517n1*/</span> <span class="token comment">/*+ full(t) */</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> big_table_line2 t<span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> odbs_performance_snap_util<span class="token punctuation">.</span>end_snap_sql_simple <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>

<span class="token comment">---------------------------------------------------------------------------------------------------------------</span>
<span class="token comment">--全表扫描+并行，从磁盘读取</span>
<span class="token keyword">SELECT</span> odbs_performance_snap_util<span class="token punctuation">.</span>start_snap_sql_simple<span class="token punctuation">(</span>i_task_name <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;test230517o1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>

<span class="token comment">--alter session set &quot;_serial_direct_read&quot;=never; </span>

<span class="token keyword">alter</span> <span class="token keyword">session</span> <span class="token keyword">set</span> <span class="token string">&quot;_serial_direct_read&quot;</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span> 

<span class="token keyword">SELECT</span> <span class="token comment">/*test230517o1*/</span> <span class="token comment">/*+ parallel(8) full(t) */</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> big_table_line2 t<span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> odbs_performance_snap_util<span class="token punctuation">.</span>end_snap_sql_simple <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>

<span class="token comment">---------------------------------------------------------------------------------------------------------------</span>
<span class="token comment">--全索引扫描，从磁盘读取</span>
<span class="token keyword">SELECT</span> odbs_performance_snap_util<span class="token punctuation">.</span>start_snap_sql_simple<span class="token punctuation">(</span>i_task_name <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;test230517p1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>

<span class="token comment">--alter session set &quot;_serial_direct_read&quot;=never; </span>

<span class="token keyword">alter</span> <span class="token keyword">session</span> <span class="token keyword">set</span> <span class="token string">&quot;_serial_direct_read&quot;</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span> 

<span class="token keyword">SELECT</span> <span class="token comment">/*test230517p1*/</span> <span class="token comment">/*+ parallel(1) index_ffs(t big_table_line2_pk) */</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> big_table_line2 t<span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> odbs_performance_snap_util<span class="token punctuation">.</span>end_snap_sql_simple <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>

<span class="token comment">---------------------------------------------------------------------------------------------------------------</span>
<span class="token comment">--全索引扫描，从内存读取</span>
<span class="token keyword">SELECT</span> odbs_performance_snap_util<span class="token punctuation">.</span>start_snap_sql_simple<span class="token punctuation">(</span>i_task_name <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;test230517q1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>

<span class="token comment">--alter session set &quot;_serial_direct_read&quot;=never; </span>

<span class="token keyword">alter</span> <span class="token keyword">session</span> <span class="token keyword">set</span> <span class="token string">&quot;_serial_direct_read&quot;</span><span class="token operator">=</span>never<span class="token punctuation">;</span> 

<span class="token keyword">SELECT</span> <span class="token comment">/*test230517q1*/</span> <span class="token comment">/*+ parallel(1) index_ffs(t big_table_line2_pk) */</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> big_table_line2 t<span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> odbs_performance_snap_util<span class="token punctuation">.</span>end_snap_sql_simple <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>

<span class="token comment">---------------------------------------------------------------------------------------------------------------</span>
<span class="token comment">--全索引扫描+并行，从磁盘读取</span>
<span class="token keyword">SELECT</span> odbs_performance_snap_util<span class="token punctuation">.</span>start_snap_sql_simple<span class="token punctuation">(</span>i_task_name <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;test230517r1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>

<span class="token comment">--alter session set &quot;_serial_direct_read&quot;=never; </span>

<span class="token keyword">alter</span> <span class="token keyword">session</span> <span class="token keyword">set</span> <span class="token string">&quot;_serial_direct_read&quot;</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span> 

<span class="token keyword">SELECT</span> <span class="token comment">/*test230517r1*/</span> <span class="token comment">/*+ parallel(8) index_ffs(t big_table_line2_n1) */</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> big_table_line2 t <span class="token keyword">WHERE</span> t<span class="token punctuation">.</span>parent_id <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> odbs_performance_snap_util<span class="token punctuation">.</span>end_snap_sql_simple <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[p];function c(l,i){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","Optimizing.html.vue"]]);export{k as default};
