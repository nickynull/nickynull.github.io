import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as l,o as p}from"./app-BzR1ktM_.js";const e={};function o(t,s){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="c" tabindex="-1"><a class="header-anchor" href="#c"><span>C#</span></a></h1><h2 id="通用工具" tabindex="-1"><a class="header-anchor" href="#通用工具"><span>通用工具</span></a></h2><h3 id="http工具" tabindex="-1"><a class="header-anchor" href="#http工具"><span>HTTP工具</span></a></h3><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">\uFEFFusing</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Newtonsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;text-decoration:underline;">Json</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">using</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">System</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">using</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">System</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;text-decoration:underline;">Collections</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;text-decoration:underline;">Generic</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">using</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">System</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;text-decoration:underline;">IO</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">using</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">System</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;text-decoration:underline;">Net</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">using</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">System</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;text-decoration:underline;">Text</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">namespace</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">SIE</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;text-decoration:underline;">Core</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;text-decoration:underline;">Common</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#88846F;">    /// &lt;</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">    /// HTTP工具集</span></span>
<span class="line"><span style="color:#88846F;">    /// &lt;/</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#66D9EF;font-style:italic;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">HttpUtil</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// HTTP工具集单例实例</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;/</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">        public</span><span style="color:#F92672;"> static</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">HttpUtil</span><span style="color:#F8F8F2;"> Instant </span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;"> HttpUtilInstant.Instant;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">HttpUtilInstant</span><span style="color:#F8F8F2;"> { </span><span style="color:#F92672;">public</span><span style="color:#F92672;"> static</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">HttpUtil</span><span style="color:#F8F8F2;"> Instant </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">HttpUtil</span><span style="color:#F8F8F2;">(); }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// 默认超时 3 分钟</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;/</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">        readonly</span><span style="color:#F92672;"> int</span><span style="color:#F8F8F2;"> _defaultTimeout </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 60</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// 默认编码格式</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;/</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">        readonly</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Encoding</span><span style="color:#F8F8F2;"> _defaultEncoding </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Encoding.UTF8;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// 私有构造函数，不允许外部自行实例化</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;/</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">        private</span><span style="color:#A6E22E;"> HttpUtil</span><span style="color:#F8F8F2;">() { }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// 生成GET请求URL</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;/</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;baseUrl&quot;</span><span style="color:#88846F;">&gt;请求地址&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;getParams&quot;</span><span style="color:#88846F;">&gt;请求参数&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">returns</span><span style="color:#88846F;">&gt;GET请求URL&lt;/</span><span style="color:#F92672;">returns</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">        public</span><span style="color:#F92672;"> string</span><span style="color:#A6E22E;"> CreateGetUrl</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> baseUrl, </span><span style="color:#A6E22E;text-decoration:underline;">Dictionary</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">&gt; getParams)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> (getParams </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> null</span><span style="color:#F92672;"> ||</span><span style="color:#F8F8F2;"> getParams.Count </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#F92672;">                return</span><span style="color:#F8F8F2;"> baseUrl;</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span>            </span><span style="color:#A6E22E;text-decoration:underline;">StringBuilder</span><span style="color:#F8F8F2;"> sb </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">StringBuilder</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">            sb.</span><span style="color:#A6E22E;">Append</span><span style="color:#F8F8F2;">(baseUrl);</span></span>
<span class="line"><span style="color:#F8F8F2;">            sb.</span><span style="color:#A6E22E;">Append</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;?&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span>            </span><span style="color:#A6E22E;text-decoration:underline;">List</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">&gt; paramList </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">List</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#F92672;">            foreach</span><span style="color:#F8F8F2;"> (</span><span style="color:#A6E22E;text-decoration:underline;">KeyValuePair</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">&gt; kvp </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> getParams)</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#F92672;">                if</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">!</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">IsNullOrEmpty</span><span style="color:#F8F8F2;">(kvp.Value))</span></span>
<span class="line"><span style="color:#F8F8F2;">                {</span></span>
<span class="line"><span style="color:#F8F8F2;">                    paramList.</span><span style="color:#A6E22E;">Add</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">$&quot;{</span><span style="color:#F8F8F2;">kvp</span><span style="color:#E6DB74;">.</span><span style="color:#F8F8F2;">Key</span><span style="color:#E6DB74;">}={</span><span style="color:#F8F8F2;">kvp</span><span style="color:#E6DB74;">.</span><span style="color:#F8F8F2;">Value</span><span style="color:#E6DB74;">}&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">                }</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">            sb.</span><span style="color:#A6E22E;">Append</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">Join</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;&amp;&quot;</span><span style="color:#F8F8F2;">, paramList));</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#F8F8F2;"> sb.</span><span style="color:#A6E22E;">ToString</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// 发送GET请求</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;/</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;url&quot;</span><span style="color:#88846F;">&gt;请求地址&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;urlParams&quot;</span><span style="color:#88846F;">&gt;请求参数&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;header&quot;</span><span style="color:#88846F;">&gt;请求头&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;timeout&quot;</span><span style="color:#88846F;">&gt;超时时间（秒）&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">returns</span><span style="color:#88846F;">&gt;响应内容&lt;/</span><span style="color:#F92672;">returns</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">        public</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TResponse</span><span style="color:#A6E22E;"> Get</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">TResponse</span><span style="color:#F8F8F2;">&gt;(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> url,</span></span>
<span class="line"><span>            </span><span style="color:#A6E22E;text-decoration:underline;">Dictionary</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">&gt; urlParams </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span>            </span><span style="color:#A6E22E;text-decoration:underline;">Dictionary</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">&gt; header </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F92672;">            int</span><span style="color:#F8F8F2;">? timeout </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            url </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> CreateGetUrl</span><span style="color:#F8F8F2;">(url, urlParams);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">            var</span><span style="color:#F8F8F2;"> responseStr </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> Request</span><span style="color:#F8F8F2;">(url, </span><span style="color:#E6DB74;">&quot;GET&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">null</span><span style="color:#F8F8F2;">, header, timeout);</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#A6E22E;"> ResponseConvert</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">TResponse</span><span style="color:#F8F8F2;">&gt;(responseStr);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// 发送POST JSON内容请求</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;/</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;url&quot;</span><span style="color:#88846F;">&gt;请求地址&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;jsonObj&quot;</span><span style="color:#88846F;">&gt;请求JSON对象&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;header&quot;</span><span style="color:#88846F;">&gt;请求头&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;encoding&quot;</span><span style="color:#88846F;">&gt;请求编码格式&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;timeout&quot;</span><span style="color:#88846F;">&gt;请求超时时间（秒）&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">returns</span><span style="color:#88846F;">&gt;响应内容&lt;/</span><span style="color:#F92672;">returns</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">        public</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TResponse</span><span style="color:#A6E22E;"> PostJson</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">TJsonObj</span><span style="color:#F8F8F2;">, </span><span style="color:#A6E22E;text-decoration:underline;">TResponse</span><span style="color:#F8F8F2;">&gt;(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> url, </span><span style="color:#A6E22E;text-decoration:underline;">TJsonObj</span><span style="color:#F8F8F2;"> jsonObj,</span></span>
<span class="line"><span>            </span><span style="color:#A6E22E;text-decoration:underline;">Dictionary</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">&gt; header </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span>            </span><span style="color:#A6E22E;text-decoration:underline;">Encoding</span><span style="color:#F8F8F2;"> encoding </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F92672;">            int</span><span style="color:#F8F8F2;">? timeout </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F92672;">            string</span><span style="color:#F8F8F2;"> json </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> jsonObj </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> null</span><span style="color:#F92672;"> ?</span><span style="color:#AE81FF;"> null</span><span style="color:#F92672;"> :</span><span style="color:#F8F8F2;"> JsonConvert.</span><span style="color:#A6E22E;">SerializeObject</span><span style="color:#F8F8F2;">(jsonObj);</span></span>
<span class="line"><span style="color:#F8F8F2;">            encoding </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> encoding </span><span style="color:#F92672;">??</span><span style="color:#F8F8F2;"> _defaultEncoding;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">            string</span><span style="color:#F8F8F2;"> responseStr </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> Request</span><span style="color:#F8F8F2;">(url, </span><span style="color:#E6DB74;">&quot;POST&quot;</span><span style="color:#F8F8F2;">, (request </span><span style="color:#F92672;">=&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#F92672;">                if</span><span style="color:#F8F8F2;"> (json </span><span style="color:#F92672;">!=</span><span style="color:#AE81FF;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">                {</span></span>
<span class="line"><span style="color:#F8F8F2;">                    request.ContentType </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;application/json&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">                    byte</span><span style="color:#F8F8F2;">[] jsonBytes </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> encoding.</span><span style="color:#A6E22E;">GetBytes</span><span style="color:#F8F8F2;">(json);</span></span>
<span class="line"><span style="color:#F8F8F2;">                    request.ContentLength </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> jsonBytes.Length;</span></span>
<span class="line"><span style="color:#F92672;">                    using</span><span style="color:#F8F8F2;"> (</span><span style="color:#A6E22E;text-decoration:underline;">Stream</span><span style="color:#F8F8F2;"> requestStream </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> request.</span><span style="color:#A6E22E;">GetRequestStream</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#F8F8F2;">                    {</span></span>
<span class="line"><span style="color:#F8F8F2;">                        requestStream.</span><span style="color:#A6E22E;">Write</span><span style="color:#F8F8F2;">(jsonBytes, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, jsonBytes.Length);</span></span>
<span class="line"><span style="color:#F8F8F2;">                    }</span></span>
<span class="line"><span style="color:#F8F8F2;">                }</span></span>
<span class="line"><span style="color:#F8F8F2;">            }), header, timeout);</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#A6E22E;"> ResponseConvert</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">TResponse</span><span style="color:#F8F8F2;">&gt;(responseStr);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// 发送网络请求</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;/</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;url&quot;</span><span style="color:#88846F;">&gt;请求URL&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;method&quot;</span><span style="color:#88846F;">&gt;请求方法&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;requestHandle&quot;</span><span style="color:#88846F;">&gt;请求处理&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;header&quot;</span><span style="color:#88846F;">&gt;请求头&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;timeout&quot;</span><span style="color:#88846F;">&gt;请求超时时间（秒）&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">returns</span><span style="color:#88846F;">&gt;响应内容&lt;/</span><span style="color:#F92672;">returns</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">        public</span><span style="color:#F92672;"> string</span><span style="color:#A6E22E;"> Request</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> url,</span></span>
<span class="line"><span style="color:#F92672;">            string</span><span style="color:#F8F8F2;"> method,</span></span>
<span class="line"><span>            </span><span style="color:#A6E22E;text-decoration:underline;">Action</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">HttpWebRequest</span><span style="color:#F8F8F2;">&gt; requestHandle </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span>            </span><span style="color:#A6E22E;text-decoration:underline;">Dictionary</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">&gt; header </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F92672;">            int</span><span style="color:#F8F8F2;">? timeout </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            timeout </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (timeout </span><span style="color:#F92672;">??</span><span style="color:#F8F8F2;"> _defaultTimeout) </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 1000</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">            var</span><span style="color:#F8F8F2;"> request </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> WebRequest.</span><span style="color:#A6E22E;">CreateHttp</span><span style="color:#F8F8F2;">(url);</span></span>
<span class="line"><span style="color:#F8F8F2;">            request.Timeout </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> timeout.Value;</span></span>
<span class="line"><span style="color:#F8F8F2;">            request.Method </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> method;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">            // 请求头写入</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> (header </span><span style="color:#F92672;">!=</span><span style="color:#AE81FF;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#F92672;">                foreach</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> kv </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> header)</span></span>
<span class="line"><span style="color:#F8F8F2;">                {</span></span>
<span class="line"><span style="color:#F8F8F2;">                    request.Headers[kv.Key] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> kv.Value;</span></span>
<span class="line"><span style="color:#F8F8F2;">                }</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">            // 请求差异化处理</span></span>
<span class="line"><span style="color:#F8F8F2;">            requestHandle</span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">Invoke</span><span style="color:#F8F8F2;">(request);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">            // 发送请求并获取响应</span></span>
<span class="line"><span style="color:#F92672;">            string</span><span style="color:#F8F8F2;"> responseStr </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">            using</span><span style="color:#F8F8F2;"> (</span><span style="color:#A6E22E;text-decoration:underline;">HttpWebResponse</span><span style="color:#F8F8F2;"> response </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#A6E22E;text-decoration:underline;">HttpWebResponse</span><span style="color:#F8F8F2;">)request.</span><span style="color:#A6E22E;">GetResponse</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#F92672;">                if</span><span style="color:#F8F8F2;"> (response.StatusCode </span><span style="color:#F92672;">!=</span><span style="color:#F8F8F2;"> HttpStatusCode.OK)</span></span>
<span class="line"><span style="color:#F8F8F2;">                {</span></span>
<span class="line"><span style="color:#F92672;">                    throw</span><span style="color:#F92672;"> new</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Exception</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">Format</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;网络请求失败。错误代码：{0}。错误描述：{1}&quot;</span><span style="color:#F8F8F2;">, (</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;">)response.StatusCode, response.StatusDescription));</span></span>
<span class="line"><span style="color:#F8F8F2;">                }</span></span>
<span class="line"><span style="color:#F92672;">                using</span><span style="color:#F8F8F2;"> (</span><span style="color:#A6E22E;text-decoration:underline;">Stream</span><span style="color:#F8F8F2;"> responseStream </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> response.</span><span style="color:#A6E22E;">GetResponseStream</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#F8F8F2;">                {</span></span>
<span class="line"><span style="color:#F92672;">                    using</span><span style="color:#F8F8F2;"> (</span><span style="color:#A6E22E;text-decoration:underline;">StreamReader</span><span style="color:#F8F8F2;"> reader </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">StreamReader</span><span style="color:#F8F8F2;">(responseStream))</span></span>
<span class="line"><span style="color:#F8F8F2;">                    {</span></span>
<span class="line"><span style="color:#F8F8F2;">                        responseStr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> reader.</span><span style="color:#A6E22E;">ReadToEnd</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">                    }</span></span>
<span class="line"><span style="color:#F8F8F2;">                }</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#F8F8F2;"> responseStr;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// 响应转换</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;/</span><span style="color:#F92672;">summary</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">typeparam</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;TResponse&quot;</span><span style="color:#88846F;">&gt;响应类型&lt;/</span><span style="color:#F92672;">typeparam</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">param</span><span style="color:#A6E22E;"> name</span><span style="color:#88846F;">=</span><span style="color:#E6DB74;">&quot;responseStr&quot;</span><span style="color:#88846F;">&gt;响应字符串&lt;/</span><span style="color:#F92672;">param</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#88846F;">        /// &lt;</span><span style="color:#F92672;">returns</span><span style="color:#88846F;">&gt;响应内容&lt;/</span><span style="color:#F92672;">returns</span><span style="color:#88846F;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">        public</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TResponse</span><span style="color:#A6E22E;"> ResponseConvert</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">TResponse</span><span style="color:#F8F8F2;">&gt;(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> responseStr)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span>            </span><span style="color:#A6E22E;text-decoration:underline;">Type</span><span style="color:#F8F8F2;"> responseType </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> typeof</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;text-decoration:underline;">TResponse</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span>            </span><span style="color:#A6E22E;text-decoration:underline;">TResponse</span><span style="color:#F8F8F2;"> response </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> default</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> (responseStr </span><span style="color:#F92672;">!=</span><span style="color:#AE81FF;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#F92672;">                if</span><span style="color:#F8F8F2;"> (responseType </span><span style="color:#F92672;">==</span><span style="color:#F92672;"> typeof</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">                {</span></span>
<span class="line"><span style="color:#F8F8F2;">                    response </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#A6E22E;text-decoration:underline;">TResponse</span><span style="color:#F8F8F2;">)(</span><span style="color:#F92672;">object</span><span style="color:#F8F8F2;">)responseStr;</span></span>
<span class="line"><span style="color:#F8F8F2;">                }</span></span>
<span class="line"><span style="color:#F92672;">                else</span></span>
<span class="line"><span style="color:#F8F8F2;">                {</span></span>
<span class="line"><span style="color:#F8F8F2;">                    response </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> JsonConvert.</span><span style="color:#A6E22E;">DeserializeObject</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">TResponse</span><span style="color:#F8F8F2;">&gt;(responseStr);</span></span>
<span class="line"><span style="color:#F8F8F2;">                }</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#F8F8F2;"> response;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)]))}const F=n(e,[["render",o]]),i=JSON.parse('{"path":"/servers/csharp/","title":"C#","lang":"zh-CN","frontmatter":{},"git":{},"readingTime":{"minutes":0.04,"words":11},"filePathRelative":"servers/csharp/README.md"}');export{F as comp,i as data};
