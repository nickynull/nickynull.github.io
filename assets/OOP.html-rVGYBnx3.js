import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as t,o as n}from"./app-DHF0Qz1w.js";const i={};function s(o,a){return n(),r("div",null,a[0]||(a[0]=[t('<h1 id="面向对象" tabindex="-1"><a class="header-anchor" href="#面向对象"><span>面向对象</span></a></h1><div class="hint-container tip"><p class="hint-container-title">概念</p><p>面向对象程序设计（Object Oriented Programming，OOP）是一种计算机编程架构。</p></div><blockquote><p>OOP的一条基本原则是计算机程序由单个能够起到子程序作用的单元或对象组合而成。<br> OOP达到了软件工程的三个主要目标：重用性、灵活性和扩展性。<br> OOP=对象+类+继承+多态+消息，其中核心概念是类和对象。</p></blockquote><blockquote><p>面向对象程序设计以对象为核心，该方法认为程序由一系列对象组成。<br> 类是对现实世界的抽象，包括表示静态属性的数据和对数据的操作，对象是类的实例化。<br> 对象间通过消息传递相互通信，来模拟现实世界中不同实体间的联系。<br> 在面向对象的程序设计中，对象是组成程序的基本模块。</p></blockquote><blockquote><p>面向对象程序设计方法是尽可能模拟人类的思维方式，使得软件的开发方法与过程尽可能接近人类认识世界、解决现实问题的方法和过程，也即使得描述问题的问题空间与问题的解决方案空间在结构上尽可能一致，把客观世界中的实体抽象为问题域中的对象。</p></blockquote><h2 id="面向对象三大特性" tabindex="-1"><a class="header-anchor" href="#面向对象三大特性"><span>面向对象三大特性</span></a></h2><h3 id="封装性" tabindex="-1"><a class="header-anchor" href="#封装性"><span>封装性</span></a></h3><ul><li><p>将对象的属性和行为看成一个密不可分的整体</p></li><li><p>把不需要让外界知道的信息隐藏起来</p></li></ul><h3 id="继承" tabindex="-1"><a class="header-anchor" href="#继承"><span>继承</span></a></h3><ul><li><p>子类继承父类的特征和行为</p></li><li><p>使得子类具有父类相同的行为</p></li></ul><h3 id="多态" tabindex="-1"><a class="header-anchor" href="#多态"><span>多态</span></a></h3><ul><li>同一个行为具有多个不同表现形式或形态的能力</li></ul>',12)]))}const c=e(i,[["render",s]]),h=JSON.parse('{"path":"/others/programing-designs/OOP.html","title":"面向对象","lang":"zh-CN","frontmatter":{},"git":{},"readingTime":{"minutes":1.45,"words":434},"filePathRelative":"others/programing-designs/OOP.md"}');export{c as comp,h as data};
