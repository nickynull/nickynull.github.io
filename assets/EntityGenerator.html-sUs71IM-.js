import{_ as T,f as a,o as D,c as E,a as s,g as p,h as i,d as O}from"./app-a8PO4yvU.js";const U=s("h1",{id:"简单实体对象生成器",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#简单实体对象生成器","aria-hidden":"true"},"#"),O(" 简单实体对象生成器")],-1),N={class:"line-block"},M={class:"line-block"},G=s("span",{class:"line-label"},"实体类名",-1),R={class:"line-block"},B=s("span",{class:"line-label"},"实体描述",-1),L={class:"line-block"},S=s("span",{class:"line-label"},"实体表名",-1),A={class:"line-block"},z={class:"line-block"},I={__name:"EntityGenerator.html",setup(Q){const h=a(""),v=a(""),$=a(""),r=a(""),m=a(""),y=a(""),b=a(""),f=a("");function w(e,t){return e&&e.length>t?e[t]:""}function k(){if(!r.value)return;let e=[],t=r.value.split(`
`),l=m.value.split(`
`),x=y.value.split(`
`);const c=h.value||"TempObject",g=v.value,d=$.value;e.push("/// <summary>"),e.push(`/// ${g}`),e.push("/// </summary>"),e.push(`[Label("${g}")]`),e.push("[RootEntity, Serializable]"),e.push(`public class ${c} : DataEntity`),e.push("{");for(let o=0;o<t.length;o++){const n=w(t,o),u=w(l,o),V=w(x,o)||"string";e.push(`	#region ${u} ${n}`),e.push("	/// <summary>"),e.push(`	/// ${u}`),e.push("	/// </summary>"),e.push(`	[Label("${u}")]`),e.push(`	public static readonly Property<${V}> ${n}Property = P<${c}>.Register(e => e.${n});`),e.push("	/// <summary>"),e.push(`	/// ${u}`),e.push("	/// </summary>"),e.push(`	public ${V} ${n}`),e.push("	{"),e.push(`		get { return this.GetProperty(${n}Property); }`),e.push(`		set { this.SetProperty(${n}Property, value); }`),e.push("	}"),e.push("	#endregion"),e.push("")}return e.splice(e.length-1,1),e.push("}"),e.push(""),e.push("/// <summary>"),e.push(`/// ${g} 实体配置`),e.push("/// </summary>"),e.push(`internal class ${c}Config : EntityConfig<${c}>`),e.push("{"),e.push("	/// <summary>"),e.push("	/// 元数据配置"),e.push("	/// </summary>"),e.push("	protected override void ConfigMeta()"),e.push("	{"),e.push(`		Meta.MapTable("${d}").MapAllProperties();`),e.push("	}"),e.push("}"),e.join(`
`)}function _(){if(!r.value)return;let e=[],t=r.value.split(`
`);m.value.split(`
`),y.value.split(`
`);const l=["	protected override void ConfigView() {}","	protected override void ConfigListView()","	protected override void ConfigDetailsView()","	protected override void ConfigQueryView()","	protected override void ConfigSelectionView() {}","	protected override void ConfigImportView() {}"],x=["默认视图","列表视图","表单视图","查询视图","选择视图","导入视图"],c=h.value||"TempObject",g=v.value;e.push("/// <summary>"),e.push(`/// ${g} 视图`),e.push("/// </summary>"),e.push(`class ${c}ViewConfig : WebViewConfig<${c}>`),e.push("{");for(let d=0;d<l.length;d++){const o=l[d],n=x[d];if(e.push("	/// <summary>"),e.push(`	/// ${n}`),e.push("	/// </summary>"),e.push(o),o.indexOf("{}")==-1){e.push("	{");for(let u=0;u<t.length;u++){const V=w(t,u);e.push(`		View.Property(p => p.${V});`)}e.push("	}")}e.push("")}return e.splice(e.length-1,1),e.push("}"),e.join(`
`)}function j(){b.value=k(),f.value=_(),window.$alert("运行完毕")}function C(e,t){window.$copy(e,t)}function P(){h.value="",v.value="",$.value="",r.value="",m.value="",y.value="",b.value="",f.value="",window.$alert("清空完毕")}return(e,t)=>(D(),E("div",null,[U,s("div",N,[s("button",{onClick:j},"运行"),s("button",{onClick:t[0]||(t[0]=l=>C(b.value,"实体"))},"复制实体"),s("button",{onClick:t[1]||(t[1]=l=>C(f.value,"视图"))},"复制视图"),s("button",{onClick:P},"清空")]),s("div",M,[G,p(s("input",{class:"line-content","onUpdate:modelValue":t[2]||(t[2]=l=>h.value=l)},null,512),[[i,h.value]])]),s("div",R,[B,p(s("input",{class:"line-content","onUpdate:modelValue":t[3]||(t[3]=l=>v.value=l)},null,512),[[i,v.value]])]),s("div",L,[S,p(s("input",{class:"line-content","onUpdate:modelValue":t[4]||(t[4]=l=>$.value=l)},null,512),[[i,$.value]])]),s("div",A,[p(s("textarea",{"onUpdate:modelValue":t[5]||(t[5]=l=>r.value=l),class:"text line-huge",placeholder:"属性名，多个时换行"},null,512),[[i,r.value]]),p(s("textarea",{"onUpdate:modelValue":t[6]||(t[6]=l=>m.value=l),class:"text line-huge",placeholder:"属性描述，多个时换行"},null,512),[[i,m.value]]),p(s("textarea",{"onUpdate:modelValue":t[7]||(t[7]=l=>y.value=l),class:"text line-huge",placeholder:"属性类型，多个时换行，不输入时默认string"},null,512),[[i,y.value]])]),s("div",z,[p(s("textarea",{"onUpdate:modelValue":t[8]||(t[8]=l=>b.value=l),class:"text line-huge",placeholder:"实体",readonly:"",style:{height:"25vh"}},null,512),[[i,b.value]]),p(s("textarea",{"onUpdate:modelValue":t[9]||(t[9]=l=>f.value=l),class:"text line-huge",placeholder:"视图",readonly:"",style:{height:"25vh"}},null,512),[[i,f.value]])])]))}},q=T(I,[["__file","EntityGenerator.html.vue"]]);export{q as default};
